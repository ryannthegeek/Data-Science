## Extensions of scatterplots
require(tidyverse)
## Import the cel and cces data, dropping NAs
drop_na(read_csv("cces_data.csv"))
drop_na(read_csv("cel_data.csv"))
attach(cces)
## Import the cel and cces data, dropping NAs
cces <- drop_na(read_csv("cces_data.csv"))
cel <- drop_na(read_csv("cel_data.csv"))
attach(cces)
attach(cel)
ggplot(data = cces, aes(x = educ, y = ideo5)) +
geom_jitter()
ggplot(data = cces, aes(x = educ, y = ideo5)) +
geom_point()
ggplot(data = cces, aes(x = educ, y = ideo5)) +
geom_jitter()
ggplot(data = cces, aes(x = educ, y = ideo5)) +
geom_jitter() +
geom_smooth() ####the default line is a loess curve
ggplot(data = cces, aes(x = educ, y = ideo5)) +
geom_jitter() +
#geom_smooth(method="loess") ####the default line is a loess curve
geom_smooth(method = "lm") ####change the method for drawing the line, here using linear regression
ggplot(data = cces, aes(x = educ, y = ideo5)) +
geom_jitter() +
geom_smooth(method = "lm", level = .9) ###specify confidence level
1444/3
1444/4
361/9
361/7
289/17
var1<-runif(100,min=0,max=1)
var2<- var1 + rnorm(100, 1, .2)
var3<- var1 * (-rnorm(100, 1, .2))
df <- tibble(var1, var2, var3)
df <- tibble(var1, var2, var3);df
ggpairs(df)
ggplot(data = data, mapping = mapping) +
geom_jitter(color = "red")
ggplot(data = Data, mapping = Mapping) +
geom_jitter(color = "red")
ggplot(Data = data, Mapping = mapping) +
geom_jitter(color = "red")
install.packages("GGally")
install.packages("ggcorrplot")
install.packages("ggalt")
install.packages("packcircles")
install.packages("ggalluvial")
require(GGally)
ggpairs(df)
my_scatter <- function(data, mapping){
ggplot(data = data, mapping = mapping) +
geom_jitter(color = "red")
}
ggplot(data = data, mapping = mapping) +
geom_density(alpha =.05, fill = "red")
my_density <- function(data, mapping){
ggplot(data = data, mapping = mapping) +
geom_density(alpha =.05, fill = "red")
}
ggpairs(df,
lower = list(continuous = my_scatter),
diag = list(continuous = my_density))
#### Correlation plots
require(ggcorrplot)
require(ggthemes)
df <- cces %>%
select(educ, pid7, pew_religimp)
r <- cor(df, use = "complete.obs")
ggcorrplot(r)
ggcorrplot(r, type = "lower")
ggcorrplot(r, type = "lower",
title = "Correlations",
colors = c("yellow", "green", "blue"),
outline.color = "purple")
ggcorrplot(r, type = "lower",
title = "Correlations",
ggtheme = theme_wsj())
cel_114 <- cel %>%
filter(congress == 114)
ggplot(data = members, aes(x = les,y = thomas_name)) +
geom_point()
members <-sample_n(cel_114, 25)
ggplot(data = members, aes(x = les,y = thomas_name)) +
geom_point()
head(members)
set.seed(12345)
members <-sample_n(cel_114, 25)
head(members)
ggplot(data = members, aes(x = les,y = thomas_name)) +
geom_point()
members <-sample_n(cel_114, 25)
head(members)
ggplot(data = members, aes(x = les,y = thomas_name)) +
geom_point()
ggplot(members, aes(x = les, y = reorder(thomas_name, les))) + ######reorder in descending
geom_point(size = 5) +
labs(x = "Legislative Effectivness", y= " ") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(linetype = "dashed", color = "blue"))
ggplot(members, aes(x = reorder(thomas_name, les), y = les)) +
geom_point() +
geom_segment(aes(x = thomas_name, xend = thomas_name, y = 0, yend = les)) +
theme(axis.text.x = element_text(angle = 90))
## Extensions of scatterplots
require(tidyverse)
attach(cces)
attach(cel)
#####make temporal data
var1<-runif(10, 0, 25)
time<-seq(1:10)
df<-tibble(var1,time)
ggplot(df, aes(x = time, y = var1)) +
geom_area() ####color in the area under the line
#####make temporal data
set.seed(12344)
var1<-runif(10, 0, 25)
time<-seq(1:10)
df<-tibble(var1,time)
ggplot(df, aes(x = time, y = var1)) +
geom_area() ####color in the area under the line
ggplot(df, aes(x = time, y = var1)) +
geom_area() ####color in the area under the line
ggplot(data = df, aes(x = time, y = var1, fill = "red")) +
geom_area() +
guides(fill = "none")
ggplot(data = df, aes(x = time, y = var1, fill = "red")) +
geom_area() +
ggplot(data = df, aes(x = time, y = var1, fill = "red")) +
geom_area()
ggplot(data = df, aes(x = time, y = var1, fill = "red")) +
geom_area()
ggplot(data = df, aes(x = time, y = var1, color = "red")) +
geom_area()
ggplot(data = df, aes(x = time, y = var1, color = "red")) +
geom_area()
ggplot(data = df, aes(x = time, y = var1, fill = "red")) +
geom_area()
ggplot(data = df, aes(x = time, y = var1, fill = "red")) +
geom_area() +
guides(fill = "none")
Bob <- tibble(person = rep("Bob", 5), time = seq(1:5), change = runif(5, 0, 25))
Sue <- tibble(person = rep("Sue", 5), time = seq(1:5), change = runif(5, 0, 25))
Lisa <- tibble(person = rep("Lisa", 5), time = seq(1:5), change = runif(5, 0, 25))
head(df)
df <- bind_rows(Bob, Sue, Lisa)
head(df)
ggplot(df, aes(x = time, y = change, fill = person)) +
geom_area()
####test your understanding of what the plot is showing
df_wide <- df %>%
pivot_wider(id_cols = time, values_from = change, names_from = person)
####note that the stacked areas add up to the totals
df_wide$total<-
df_wide$Bob +
df_wide$Sue +
df_wide$Lisa
require(ggalt)
df2 <- df %>%
filter(time == 1 | time == 5) %>%
pivot_wider(names_from = time, values_from = change) %>%
rename(year1 = `1`, year5 = `5`)
ggplot(df2,aes(y = person,
x = year1, ####the starting point, earliest time
xend = year5)) + ####the ending point, final time
geom_dumbbell() ####connects the points
ggplot(df2,
aes(y = reorder(person, year1), ####reorders the y axis
x = year1,
xend = year5)) +
geom_dumbbell()
ggplot(df2,
aes(y = reorder(person, year1), ####reorders the y axis
x = year1,
xend = year5)) +
geom_dumbbell(
colour_x = "purple", ####adds color --- makes sure you "colour", not color
colour_xend = "red",
size_x = 3,
size_xend = 3
)
Sys.which("make")
