1
00:00:00,260 --> 00:00:02,490
Another new trick that you can

2
00:00:02,490 --> 00:00:04,110
do with Plotly is to animate

3
00:00:04,110 --> 00:00:08,010
your figures similarly to how
we worked with gganimate.

4
00:00:08,010 --> 00:00:10,710
Like gganimate, Plotly works to

5
00:00:10,710 --> 00:00:12,885
animate your figures
by creating frames

6
00:00:12,885 --> 00:00:16,110
of the animation based on
cycling through some value in

7
00:00:16,110 --> 00:00:17,850
your data and then redrawing

8
00:00:17,850 --> 00:00:20,310
the figure for each
different value.

9
00:00:20,310 --> 00:00:22,470
This is quite easy to do.

10
00:00:22,470 --> 00:00:25,260
So to give you an example
here I will start with

11
00:00:25,260 --> 00:00:27,765
drawing a static
scatter plot using

12
00:00:27,765 --> 00:00:30,885
geom points and the
congressional effectiveness data

13
00:00:30,885 --> 00:00:31,920
that we've been working with

14
00:00:31,920 --> 00:00:34,110
in several previous examples.

15
00:00:34,110 --> 00:00:36,740
This should all be very
familiar to you by now,

16
00:00:36,740 --> 00:00:39,925
but you can review the
code here if you need to.

17
00:00:39,925 --> 00:00:42,140
What this ggplot figure does,

18
00:00:42,140 --> 00:00:45,500
is it plots legislative
effectiveness on the y-axis and

19
00:00:45,500 --> 00:00:50,035
seniority on the x-axis with
the points colored by party.

20
00:00:50,035 --> 00:00:51,950
Legislative effectiveness is

21
00:00:51,950 --> 00:00:53,750
just a score that is intended

22
00:00:53,750 --> 00:00:55,220
to measure how
productive members of

23
00:00:55,220 --> 00:00:57,095
Congress are at making laws,

24
00:00:57,095 --> 00:00:59,169
and higher means more productive,

25
00:00:59,169 --> 00:01:00,500
and again what we would expect,

26
00:01:00,500 --> 00:01:02,450
is that members that
become more senior,

27
00:01:02,450 --> 00:01:04,295
that had been in the chamber
longer should be more

28
00:01:04,295 --> 00:01:05,360
productive and have a

29
00:01:05,360 --> 00:01:08,070
higher legislative
effectiveness score.

30
00:01:08,890 --> 00:01:11,030
So if we whip this up, we have

31
00:01:11,030 --> 00:01:12,620
a scatter plot for all members of

32
00:01:12,620 --> 00:01:14,390
Congress across all the years

33
00:01:14,390 --> 00:01:16,360
in Congresses in this data set.

34
00:01:16,360 --> 00:01:18,470
If I wanted to animate
this figure to

35
00:01:18,470 --> 00:01:20,375
show change across years,

36
00:01:20,375 --> 00:01:23,045
I could wrap the
entire ggplot command

37
00:01:23,045 --> 00:01:25,240
in the ggplotly function,

38
00:01:25,240 --> 00:01:28,490
and then I can add an option
in the aesthetics here that

39
00:01:28,490 --> 00:01:32,090
sets frame to the year
column in my data.

40
00:01:32,090 --> 00:01:34,460
So this is going to redraw
the figure over and over

41
00:01:34,460 --> 00:01:38,220
again based on the different
years in the data set.

42
00:01:38,390 --> 00:01:41,615
When you do this, ggplotly
creates the figure,

43
00:01:41,615 --> 00:01:43,910
and then you have this play
button down here that will

44
00:01:43,910 --> 00:01:47,640
animate the figure and
redraw it year by year.

45
00:01:48,520 --> 00:01:51,960
You'll notice that this
animation is pre-jumpy though.

46
00:01:51,960 --> 00:01:53,525
If you wanted to smooth it out,

47
00:01:53,525 --> 00:01:54,935
you could introduce what's called

48
00:01:54,935 --> 00:01:57,070
object constancy to the figure.

49
00:01:57,070 --> 00:02:00,080
This will cause points to
move from their point in

50
00:02:00,080 --> 00:02:02,120
the previous frame rather than

51
00:02:02,120 --> 00:02:05,310
being redrawn from scratch
every single time.

52
00:02:05,560 --> 00:02:08,360
What I'm doing here is
adding in the name of

53
00:02:08,360 --> 00:02:11,150
each member of Congress
as the ID here,

54
00:02:11,150 --> 00:02:13,790
because this is constant
across multiple years and

55
00:02:13,790 --> 00:02:17,935
the data set as you track
individual members across time.

56
00:02:17,935 --> 00:02:21,080
When you add this and
rerun the animation,

57
00:02:21,080 --> 00:02:22,640
you'll see that it smooth out

58
00:02:22,640 --> 00:02:25,040
and you're actually able to track

59
00:02:25,040 --> 00:02:26,390
some of the outlier members

60
00:02:26,390 --> 00:02:30,240
across Congresses, across years.

61
00:02:31,360 --> 00:02:34,970
In terms of saving or
sharing a plotly figure,

62
00:02:34,970 --> 00:02:37,190
you can export a
plotly figure from

63
00:02:37,190 --> 00:02:38,540
the RStudio viewer as

64
00:02:38,540 --> 00:02:40,925
an image and you'll get
a static image file.

65
00:02:40,925 --> 00:02:44,330
Alternatively, you can
save it as a DOTHTML file,

66
00:02:44,330 --> 00:02:46,340
and then if you open that
up in a web browser,

67
00:02:46,340 --> 00:02:49,040
it preserves the interactive
elements of the figure,

68
00:02:49,040 --> 00:02:52,025
and then you could embed
this in either web page or

69
00:02:52,025 --> 00:02:53,480
other kinds of
documents depending

70
00:02:53,480 --> 00:02:56,280
on what you're trying to produce.

71
00:02:57,080 --> 00:03:00,365
If you want to publish a
plotly figure to the web,

72
00:03:00,365 --> 00:03:02,840
you can actually do this from
the viewer window as well,

73
00:03:02,840 --> 00:03:04,490
and if you click on
the publish button,

74
00:03:04,490 --> 00:03:07,805
you can publish the
visualization directly to RPubs.

75
00:03:07,805 --> 00:03:09,580
You'll need to create an account,

76
00:03:09,580 --> 00:03:10,685
though once you do this,

77
00:03:10,685 --> 00:03:12,485
the HTML file will upload to

78
00:03:12,485 --> 00:03:14,090
your RPubs website and

79
00:03:14,090 --> 00:03:15,910
you can share the link
however of you like.

80
00:03:15,910 --> 00:03:17,825
For more about publishing

81
00:03:17,825 --> 00:03:20,720
your visualizations to
the web and sharing them,

82
00:03:20,720 --> 00:03:22,565
you'll have to take
the next course

83
00:03:22,565 --> 00:03:25,320
in this specialization.