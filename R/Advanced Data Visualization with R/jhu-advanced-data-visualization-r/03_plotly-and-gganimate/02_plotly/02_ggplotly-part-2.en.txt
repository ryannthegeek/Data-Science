Another new trick that you can do with Plotly is to animate your figures similarly to how
we worked with gganimate. Like gganimate, Plotly works to animate your figures
by creating frames of the animation based on
cycling through some value in your data and then redrawing the figure for each
different value. This is quite easy to do. So to give you an example
here I will start with drawing a static
scatter plot using geom points and the
congressional effectiveness data that we've been working with in several previous examples. This should all be very
familiar to you by now, but you can review the
code here if you need to. What this ggplot figure does, is it plots legislative
effectiveness on the y-axis and seniority on the x-axis with
the points colored by party. Legislative effectiveness is just a score that is intended to measure how
productive members of Congress are at making laws, and higher means more productive, and again what we would expect, is that members that
become more senior, that had been in the chamber
longer should be more productive and have a higher legislative
effectiveness score. So if we whip this up, we have a scatter plot for all members of Congress across all the years in Congresses in this data set. If I wanted to animate
this figure to show change across years, I could wrap the
entire ggplot command in the ggplotly function, and then I can add an option
in the aesthetics here that sets frame to the year
column in my data. So this is going to redraw
the figure over and over again based on the different
years in the data set. When you do this, ggplotly
creates the figure, and then you have this play
button down here that will animate the figure and
redraw it year by year. You'll notice that this
animation is pre-jumpy though. If you wanted to smooth it out, you could introduce what's called object constancy to the figure. This will cause points to
move from their point in the previous frame rather than being redrawn from scratch
every single time. What I'm doing here is
adding in the name of each member of Congress
as the ID here, because this is constant
across multiple years and the data set as you track
individual members across time. When you add this and
rerun the animation, you'll see that it smooth out and you're actually able to track some of the outlier members across Congresses, across years. In terms of saving or
sharing a plotly figure, you can export a
plotly figure from the RStudio viewer as an image and you'll get
a static image file. Alternatively, you can
save it as a DOTHTML file, and then if you open that
up in a web browser, it preserves the interactive
elements of the figure, and then you could embed
this in either web page or other kinds of
documents depending on what you're trying to produce. If you want to publish a
plotly figure to the web, you can actually do this from
the viewer window as well, and if you click on
the publish button, you can publish the
visualization directly to RPubs. You'll need to create an account, though once you do this, the HTML file will upload to your RPubs website and you can share the link
however of you like. For more about publishing your visualizations to
the web and sharing them, you'll have to take
the next course in this specialization.