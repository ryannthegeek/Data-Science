When you're making an animation with
gganimate, one of the choices you have to make is how you want to transition between
the different frames in the animation. In the example in the last video
we used transition states, which is intended to use primarily
with categorical variables. So when you want to flip through
different categorical variables when you are making your animation. Importantly, transition states pauses
between each of the different values of that variable, so
you have a series of fixed images. And you can control the link for
each transition and the amount of time spent on each of
the states using the transition length and state length arguments or
options in that function. If you modify these, you'll see that the
animation will linger for longer or take longer to move between a different images
depending on the values that you use for those options. Another option for the transition
functions is to use transition time instead of transition states. Transition time is a special function
that's intended for temporal data. So again hours, minutes, days,
weeks months, years, etc. With transition time,
you indicate the temporal variable and then the function will take care of the
timing for the transition links for you. There is a good example of transition
time in the gganimate documentation, but to give you a second example, I'll use some of the data we've been
working with about members of Congress. Let's say that I wanted to track the
number of Democrats and Republicans across Congresses, which changes every two
years depending on election cycles. So we know we have a column in
this data which is called dim, which equals 1 if a member is a Democrat
and 0 if the member is a Republican. And for ease here, I'm going to use re
code to make a new party variable with a categorical value for
Democrats and Republicans. This should all be review for you, so I'm kind of going through
a little bit quickly. Now I'll use group by an summarize
to create a summary table that reports the number of Democrats and Republicans in a series of years,
and I'm going to call this Cong_dot. So now I have this table with the year,
the party and the number of seats that the party
has in each one of these Congresses. I use ggplot here to draw a stacked bar
plot that shows the number of Democrats and Republicans in each Congress. And I'm also going to use geom_hline
to draw a horizontal line at 217, which is the threshold for
having a majority of seats in the house. Now let's animate this using
transition time with the year variable. We'll save this to an object
an when we run it, R will render the figure showing the
transitions for the figure across years. This is pretty cool and observant
learners here will notice that the total number of members of Congress does vary
little bit and this is because of a few quirks in the data with members
that enter or leave mid Congress. There are always 435 seats in
the House of Representatives but it changed a little bit because
of that quirk in the data. There are a few other transition types
that you will find in the documentation for gganimates, but I'll just walk through one additional
example here for illustrative purposes. transition_layer will allow you to build
up a plot layer by layer with layer here, meaning the different functions that you
add to a sequence of ggplot commands. To show you what I mean here,
let's take the Congress data again. And this time I'm going to make
a scatter plot of seniority for each member,
which again means how long that member has been in Congress against how many bills
a member passed in the 115th Congress? As I've said, other things being equal,
you would expect for members who have been in Congress for
longer to be more productive, and so we should see a positive correlation here. The final product for
that ggplot figure looks like this and it's a jittered scatter plot of
members in the 115th Congress with Republican members in red and
Democratic members in blue. Along with that I've used the geom_smooth
function to draw a best fit line through the scatter plot. One for Republican members and
one for Democratic members. What this seems to indicate is that for
Republicans in the 115th Congress, being more senior was associated
with more productivity, but that association didn't hold very
strongly or at all for Democrats. If you're curious, you can explain
this because in the 115th Congress, Republicans are in the majority, so they had more power to make laws
than their Democratic colleagues. When you look at the R code for this and
the sequence of ggplot commands, you can see that we didn't
specify the aesthetics and the data in the initial ggplot
function like we had before. Instead, we did so in in each
different layer of the plot, and that's because we wanted to be very
specific about the data that we wanted to use for
each layer in the figure. So once you've got this all set up using
the transition for the layers is easy. All you have to do is include a
transition_layers function in your ggplot string, and with that you can render the
figure and you'll see that the figure will build up layer by layer moving down
through your sequence of commands. You'll find if you look in the
documentation for this function that there are options for controlling the length of
time that the animation studies on each layer, and for controlling the length of
the transitions between the layers along with a few other options that
you can investigate on your own. This video should have
given you an intuition for how the different transition
options work with ggnimate. And for self study you can refer to
the gganimate documentation to see other possibilities. We'll continue with some more tweaks
to gganimate in the next video, so keep this R code open and I look forward
to seeing you in the next video.