1
00:00:00,320 --> 00:00:03,270
Another type of map
you may want to

2
00:00:03,270 --> 00:00:05,760
make is what is
called a bubble map,

3
00:00:05,760 --> 00:00:08,520
where different points
vary in size or

4
00:00:08,520 --> 00:00:12,225
color based on some set
of values in your data.

5
00:00:12,225 --> 00:00:14,400
For instance, let's say that

6
00:00:14,400 --> 00:00:15,750
you wanted to create a map that

7
00:00:15,750 --> 00:00:18,765
included some of the
largest cities in Japan,

8
00:00:18,765 --> 00:00:20,490
and you wanted to
vary the size of

9
00:00:20,490 --> 00:00:22,320
the marks by population and

10
00:00:22,320 --> 00:00:23,700
the color of the marks by

11
00:00:23,700 --> 00:00:27,400
some other categorical or
quantitative variable.

12
00:00:27,920 --> 00:00:30,650
Let's go ahead and
make this using

13
00:00:30,650 --> 00:00:33,855
the Maps Package and a ggplot.

14
00:00:33,855 --> 00:00:35,525
Open up a new R script

15
00:00:35,525 --> 00:00:38,545
and we'll load the
required packages.

16
00:00:38,545 --> 00:00:40,640
Let's also make a blank map of

17
00:00:40,640 --> 00:00:44,430
Japan using the techniques
we've learned before.

18
00:00:45,130 --> 00:00:49,430
The maps package has data on
many cities built into it,

19
00:00:49,430 --> 00:00:53,225
and we can access that using
the following line of code.

20
00:00:53,225 --> 00:00:56,760
Saved list of cities
to an object.

21
00:00:56,860 --> 00:00:59,075
If you look at the object,

22
00:00:59,075 --> 00:01:02,090
we see that it is a list of
many cities in Japan and

23
00:01:02,090 --> 00:01:04,070
their corresponding
populations and

24
00:01:04,070 --> 00:01:07,110
their latitude and
longitude coordinates.

25
00:01:08,110 --> 00:01:12,305
Now we first map all
the cities in Japan.

26
00:01:12,305 --> 00:01:15,005
To the blank map of Japan,

27
00:01:15,005 --> 00:01:17,975
we add a geom_point function,

28
00:01:17,975 --> 00:01:20,260
and when we make a
bubble plot like this.

29
00:01:20,260 --> 00:01:22,040
We don't need to merge

30
00:01:22,040 --> 00:01:24,715
the point data into
the map DataFrame.

31
00:01:24,715 --> 00:01:27,695
Instead, we specify
the data specifically,

32
00:01:27,695 --> 00:01:30,410
once again in the
geom_point function,

33
00:01:30,410 --> 00:01:34,110
and then we specify
longitude and latitude.

34
00:01:34,640 --> 00:01:37,100
Although we use a
group command in

35
00:01:37,100 --> 00:01:38,735
the original aesthetic mapping,

36
00:01:38,735 --> 00:01:40,025
we don't need one here,

37
00:01:40,025 --> 00:01:42,395
so we just set it to null.

38
00:01:42,395 --> 00:01:44,900
Just for some variety,
we are going to

39
00:01:44,900 --> 00:01:47,550
set the color here to red.

40
00:01:47,870 --> 00:01:51,140
Recall here that we
don't set the color in

41
00:01:51,140 --> 00:01:53,060
the original ggplot function

42
00:01:53,060 --> 00:01:54,920
or set it to a value in the data,

43
00:01:54,920 --> 00:01:56,525
in the aesthetics function.

44
00:01:56,525 --> 00:01:58,970
Because for now, we don't want
the color of the points to

45
00:01:58,970 --> 00:02:02,060
vary in conjunction with
any value in the data.

46
00:02:02,060 --> 00:02:06,270
We just unconditionally want
all the points to be red.

47
00:02:06,970 --> 00:02:09,860
When we plot this,
we see that we now

48
00:02:09,860 --> 00:02:12,245
have points for all
the cities in Japan,

49
00:02:12,245 --> 00:02:15,090
at least the ones that
we have data for.

50
00:02:15,460 --> 00:02:17,840
There are a lot of points
in the map though,

51
00:02:17,840 --> 00:02:21,740
so we might want a smaller
subset of cities to display.

52
00:02:21,740 --> 00:02:25,520
We can filter the cities to
select only those cities in

53
00:02:25,520 --> 00:02:28,940
Japan with populations
above 500,000.

54
00:02:28,940 --> 00:02:31,895
Population is contained
in the 'pop column',

55
00:02:31,895 --> 00:02:33,290
so filter for greater than

56
00:02:33,290 --> 00:02:37,230
500,000 in that
column and map again.

57
00:02:38,380 --> 00:02:41,810
If you want to add more
information to these points,

58
00:02:41,810 --> 00:02:44,600
we can change the size
and color of the points,

59
00:02:44,600 --> 00:02:47,260
mapping them to
features of the data.

60
00:02:47,260 --> 00:02:50,045
Revisiting the ggplot function,

61
00:02:50,045 --> 00:02:52,190
we set the size of the points in

62
00:02:52,190 --> 00:02:53,480
the aesthetics function of

63
00:02:53,480 --> 00:02:56,360
the geom_point function to pop.

64
00:02:56,360 --> 00:02:58,190
It's not dramatic, but you can

65
00:02:58,190 --> 00:02:59,495
see that the size of the points

66
00:02:59,495 --> 00:03:03,030
now varies based on
the population size.

67
00:03:03,740 --> 00:03:07,280
What if we wanted to
vary the size of dots by

68
00:03:07,280 --> 00:03:08,960
population and the color

69
00:03:08,960 --> 00:03:11,659
of the dots by some
other criteria.

70
00:03:11,659 --> 00:03:14,060
Let's say we wanted
to vary the color by

71
00:03:14,060 --> 00:03:17,430
some qualitative or
categorical variable.

72
00:03:17,470 --> 00:03:20,600
Again, for practice, we'll
just use the letters here

73
00:03:20,600 --> 00:03:23,015
as stand-ins for
qualitative variables,

74
00:03:23,015 --> 00:03:24,410
and I'll create a string of

75
00:03:24,410 --> 00:03:27,040
letters and attach
them to the data-set.

76
00:03:27,040 --> 00:03:29,090
With a few modifications to

77
00:03:29,090 --> 00:03:31,550
the ggplot function that
should look familiar,

78
00:03:31,550 --> 00:03:34,040
we see that color and
size now are associated

79
00:03:34,040 --> 00:03:37,130
with the categorical variable
and the size of the city.

80
00:03:37,130 --> 00:03:40,430
Note especially here that
I'm setting the color within

81
00:03:40,430 --> 00:03:42,350
the aesthetic function
because I want

82
00:03:42,350 --> 00:03:44,720
the color mapped to a
feature of the data,

83
00:03:44,720 --> 00:03:47,300
whereas before color
was set outside of

84
00:03:47,300 --> 00:03:48,980
the aesthetic function
because I just

85
00:03:48,980 --> 00:03:51,900
wanted every point
to be one color.

86
00:03:53,120 --> 00:03:56,385
Now we just do some quick
practice polishing,

87
00:03:56,385 --> 00:03:58,460
and we're done with the figure

88
00:03:58,460 --> 00:04:02,550
varying both size and
color of the cities.