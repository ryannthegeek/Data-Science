1
00:00:00,960 --> 00:00:04,637
In the past, we've done some simple
line plots that have been useful for

2
00:00:04,637 --> 00:00:06,040
exploring temporal data.

3
00:00:07,910 --> 00:00:11,707
Now we're going to do some additional work
on a few visualizations that are useful

4
00:00:11,707 --> 00:00:13,190
for showing change overtime.

5
00:00:14,350 --> 00:00:17,893
Repeat up here in the R code where
we left off in the last video.

6
00:00:17,893 --> 00:00:21,360
So find these lines of code in
the attached are code file.

7
00:00:23,320 --> 00:00:27,115
A very common visual effect
that you see with line plots,

8
00:00:27,115 --> 00:00:30,050
is to fill in the area
underneath the curve.

9
00:00:31,500 --> 00:00:36,004
These are really easy to make and so
here I've created some fake data with time

10
00:00:36,004 --> 00:00:40,044
as one value, an additional value
associated with each time point.

11
00:00:40,044 --> 00:00:42,616
You can think about this
as whatever you want.

12
00:00:42,616 --> 00:00:48,072
Scores, temperature, weights,
heights, whatever you desire.

13
00:00:48,072 --> 00:00:53,498
The plot of figure that fills
in the area underneath the line.

14
00:00:53,498 --> 00:00:57,755
You might think that you should use
a fill aesthetic and geom on line.

15
00:00:57,755 --> 00:01:01,604
But actually the best thing to do
is to use a geom area shape, so

16
00:01:01,604 --> 00:01:03,540
a completely different geom.

17
00:01:04,970 --> 00:01:06,739
By default when you use geom area,

18
00:01:06,739 --> 00:01:09,674
the fill in color underneath
the curve is going to be black.

19
00:01:09,674 --> 00:01:12,560
But you can also set the fill
color manually if you want.

20
00:01:15,160 --> 00:01:18,385
Filling in the area underneath
the curve with a single color,

21
00:01:18,385 --> 00:01:20,938
adds a certain aesthetic
quality to the visual.

22
00:01:20,938 --> 00:01:24,278
But it doesn't really add much
in terms of informational value.

23
00:01:24,278 --> 00:01:26,230
It says the same thing as a line plot.

24
00:01:27,570 --> 00:01:30,521
But you can use that space to
convey additional information,

25
00:01:30,521 --> 00:01:32,118
if you make a stacked line graph.

26
00:01:34,183 --> 00:01:39,590
Let's say I have temporel data for
three people, Bob, Sue, and Lisa.

27
00:01:39,590 --> 00:01:43,300
I record some value for
each person at each of 5 time points.

28
00:01:44,320 --> 00:01:48,258
Let's just say it's how much money is
in their pockets at any given time,

29
00:01:48,258 --> 00:01:50,176
how much change they are carrying?

30
00:01:50,176 --> 00:01:54,170
The lines of code here create a fake
data set in long format, that records

31
00:01:54,170 --> 00:01:58,310
the amount of money that each person
has in their pocket at each time point.

32
00:02:00,310 --> 00:02:04,537
Now, if we use geom area and set
the fill aesthetic to the identifier for

33
00:02:04,537 --> 00:02:05,392
each person.

34
00:02:05,392 --> 00:02:10,254
The chart will display how much money each
person has in their pocket on top of each

35
00:02:10,254 --> 00:02:11,836
other at each time point.

36
00:02:11,836 --> 00:02:16,761
So the total height of the line, will be
the cumulative amount of money that each

37
00:02:16,761 --> 00:02:20,010
of the three people has
combined at each time point.

38
00:02:21,410 --> 00:02:25,115
You can prove that this is what this
figure is actually showing by calculating

39
00:02:25,115 --> 00:02:28,763
the cumulative total of change in each
person's pocket at each time point.

40
00:02:28,763 --> 00:02:31,599
Which I can do with these few
lines of data wrangling code.

41
00:02:31,599 --> 00:02:34,689
The nice thing is that geom area
takes care of all this for you.

42
00:02:34,689 --> 00:02:38,109
And so now you're actually leveraging
the area underneath the line for

43
00:02:38,109 --> 00:02:39,656
some additional information.

44
00:02:42,551 --> 00:02:45,890
If you want to change in a value
across units of observation, and

45
00:02:45,890 --> 00:02:48,347
you want to compare two
different time points.

46
00:02:48,347 --> 00:02:53,217
So let's say we wanted to compare
the amount of change at these three people

47
00:02:53,217 --> 00:02:57,876
had at time 1, with the amount of
money that each of them had at time 5.

48
00:02:57,876 --> 00:03:00,630
A good choice for
this is a dumbbell chart.

49
00:03:00,630 --> 00:03:04,150
And will build one up here just to show
you what I mean and what that looks like.

50
00:03:05,620 --> 00:03:10,370
We make a dumbbell chart using the GG
alt package, so we load that up.

51
00:03:11,560 --> 00:03:15,520
And then we're going to wrangle this
data about Bob Sue and Lisa, so

52
00:03:15,520 --> 00:03:19,370
that we only have their
values at time 1 and time 5.

53
00:03:19,370 --> 00:03:21,740
And then we're going to
pivot into wide format.

54
00:03:23,250 --> 00:03:27,026
Making a dumbbell chart is one of those
rare times when you actually want your

55
00:03:27,026 --> 00:03:30,756
data in wide rather than long format,
for purposes of plotting in GG plot.

56
00:03:30,756 --> 00:03:33,710
So used to pivot function to
take care of that for you.

57
00:03:35,200 --> 00:03:40,078
To make the chart itself, we call the GG
plot and we put the y axis as the unit of

58
00:03:40,078 --> 00:03:44,900
observation, which in this case is
the different people Bob Sue and Lisa.

59
00:03:46,350 --> 00:03:52,910
For x, we set that to the first time point
we want to compare, which is the time.1.

60
00:03:52,910 --> 00:03:57,372
And then for x ends or which is the end
of the segment, we're going to draw here,

61
00:03:57,372 --> 00:03:59,580
that's going to be the last time point.

62
00:04:02,080 --> 00:04:06,090
Once we have this all set up,
the geom dumbbell takes care of the rest.

63
00:04:07,170 --> 00:04:08,823
And like any other GG plot figure,

64
00:04:08,823 --> 00:04:11,388
we can do refinements to
make it look more appealing.