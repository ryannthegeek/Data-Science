1
00:00:00,140 --> 00:00:02,805
In the next series of videos,

2
00:00:02,805 --> 00:00:04,110
we're going to work
our way through

3
00:00:04,110 --> 00:00:06,285
a number of different
kinds of figures,

4
00:00:06,285 --> 00:00:07,740
getting a real workout with

5
00:00:07,740 --> 00:00:10,845
ggplot and some
associated libraries.

6
00:00:10,845 --> 00:00:13,500
The goal of these videos
is to give you practice

7
00:00:13,500 --> 00:00:16,260
with making a wide
variety of figures.

8
00:00:16,260 --> 00:00:19,170
So for these videos, and
really throughout this course,

9
00:00:19,170 --> 00:00:22,320
we're not going to do as much
emphasis on data wrangling,

10
00:00:22,320 --> 00:00:23,610
but we're just going
to make a lot of

11
00:00:23,610 --> 00:00:26,080
figures and get some practice.

12
00:00:26,150 --> 00:00:30,270
We'll start with some
variations on scatter plots.

13
00:00:30,270 --> 00:00:32,130
Many of you probably have some

14
00:00:32,130 --> 00:00:33,840
basic training in statistics,

15
00:00:33,840 --> 00:00:35,550
or at least you're
familiar with the idea of

16
00:00:35,550 --> 00:00:37,795
putting a trend line
through a scatter plot.

17
00:00:37,795 --> 00:00:39,800
This allows you to
get a better sense

18
00:00:39,800 --> 00:00:41,030
of the relationship between

19
00:00:41,030 --> 00:00:42,950
two variables than
what you might be able

20
00:00:42,950 --> 00:00:45,850
to get from just looking
at a cloud of points.

21
00:00:45,850 --> 00:00:48,500
For example, I will use a set of

22
00:00:48,500 --> 00:00:51,349
survey data here that we've
used in previous classes,

23
00:00:51,349 --> 00:00:52,760
courses from

24
00:00:52,760 --> 00:00:55,465
the Cooperative Congressional
Election Survey.

25
00:00:55,465 --> 00:00:57,260
In that survey data,

26
00:00:57,260 --> 00:00:59,750
there are questions about
the educational level of

27
00:00:59,750 --> 00:01:01,925
survey respondents
in the United States

28
00:01:01,925 --> 00:01:04,150
and their political ideology.

29
00:01:04,150 --> 00:01:07,430
If you pay attention
to US politics at all,

30
00:01:07,430 --> 00:01:08,720
or really to politics in

31
00:01:08,720 --> 00:01:10,020
many different
parts of the world,

32
00:01:10,020 --> 00:01:13,040
you might be aware that an
increased level of education

33
00:01:13,040 --> 00:01:16,790
is often associated with
greater political liberalism.

34
00:01:16,790 --> 00:01:18,620
In the survey data,

35
00:01:18,620 --> 00:01:22,655
the variable ideo5 captures
political ideology,

36
00:01:22,655 --> 00:01:23,930
with five being the most

37
00:01:23,930 --> 00:01:26,695
conservative and one
being the most liberal.

38
00:01:26,695 --> 00:01:29,420
The educ variable captures

39
00:01:29,420 --> 00:01:31,280
education level with 16

40
00:01:31,280 --> 00:01:34,055
being the highest and
one being the lowest.

41
00:01:34,055 --> 00:01:36,470
So we ought to see a
negative correlation

42
00:01:36,470 --> 00:01:38,880
between these two variables.

43
00:01:39,350 --> 00:01:42,010
It's hard to assess
from a scatter plot

44
00:01:42,010 --> 00:01:43,830
what that relationship
really looks like.

45
00:01:43,830 --> 00:01:45,410
But drawing a best fit line

46
00:01:45,410 --> 00:01:47,305
gives you a better sense for it.

47
00:01:47,305 --> 00:01:49,040
We add a best fit line to

48
00:01:49,040 --> 00:01:51,950
the scatter plot here
with geom_smooth.

49
00:01:51,950 --> 00:01:53,960
There are a lot of
different approaches for

50
00:01:53,960 --> 00:01:55,670
drawing a best fit line but

51
00:01:55,670 --> 00:01:59,845
the default that geom_smooth
uses is the loess curve.

52
00:01:59,845 --> 00:02:01,880
If you're statistically inclined,

53
00:02:01,880 --> 00:02:03,380
you can select several
different methods

54
00:02:03,380 --> 00:02:04,640
for drawing that line,

55
00:02:04,640 --> 00:02:07,940
like a linear model or a
generalized linear model,

56
00:02:07,940 --> 00:02:10,120
and you can also change
the confidence intervals

57
00:02:10,120 --> 00:02:12,020
drawn around the line.

58
00:02:12,020 --> 00:02:14,300
But be very careful with this if

59
00:02:14,300 --> 00:02:16,699
you're not
statistically inclined,

60
00:02:16,699 --> 00:02:18,800
because doing
statistical inference

61
00:02:18,800 --> 00:02:21,680
with this kind of
approach is pretty dicey.

62
00:02:21,680 --> 00:02:24,630
Exploratory analysis,
however, is fine and

63
00:02:24,630 --> 00:02:26,910
so if you want to draw
some best fit lines,

64
00:02:26,910 --> 00:02:28,290
you scatter plots
to get a sense for

65
00:02:28,290 --> 00:02:30,720
the data just sort
of an intuition,

66
00:02:30,720 --> 00:02:32,830
that's an okay thing to do.

67
00:02:34,040 --> 00:02:36,710
In addition to a best fit line,

68
00:02:36,710 --> 00:02:38,360
another way to use
scatter plots for

69
00:02:38,360 --> 00:02:39,980
exploratory visualization is to

70
00:02:39,980 --> 00:02:41,750
use a scatter plot matrix,

71
00:02:41,750 --> 00:02:43,880
which will show you the
bivariate relationship

72
00:02:43,880 --> 00:02:47,245
between several different
variables in your data at once.

73
00:02:47,245 --> 00:02:49,790
The library GGally has

74
00:02:49,790 --> 00:02:53,095
a handy tool for creating
a scatter plot matrix.

75
00:02:53,095 --> 00:02:55,650
These lines of code have created

76
00:02:55,650 --> 00:02:58,940
some simple fake data with
variable one and variable two

77
00:02:58,940 --> 00:03:01,055
being tightly correlated and

78
00:03:01,055 --> 00:03:02,375
the third variable being

79
00:03:02,375 --> 00:03:05,275
negatively correlated
with variable one.

80
00:03:05,275 --> 00:03:07,370
When we put these together into

81
00:03:07,370 --> 00:03:11,854
a table and we feed that
into the function ggpairs,

82
00:03:11,854 --> 00:03:13,730
it generates a scatter
plot matrix for

83
00:03:13,730 --> 00:03:16,520
us showing the distribution
of the variables,

84
00:03:16,520 --> 00:03:18,320
the bivariate scatter plots,

85
00:03:18,320 --> 00:03:19,880
and the correlation coefficients

86
00:03:19,880 --> 00:03:22,470
for each of the variables pairs.

87
00:03:22,700 --> 00:03:25,790
If you want to modify the look
of the scatter plots with

88
00:03:25,790 --> 00:03:27,710
the density plots in
a scatter plot matrix

89
00:03:27,710 --> 00:03:28,730
that you make like this,

90
00:03:28,730 --> 00:03:30,530
you can write custom functions

91
00:03:30,530 --> 00:03:32,075
for the plotting functions,

92
00:03:32,075 --> 00:03:33,470
and then you can include those in

93
00:03:33,470 --> 00:03:35,390
the ggpairs function using

94
00:03:35,390 --> 00:03:37,495
a lower and diagonal arguments.

95
00:03:37,495 --> 00:03:40,070
This is the way that you can
control color and fill and

96
00:03:40,070 --> 00:03:43,890
other aspects of
the visualization.

97
00:03:44,600 --> 00:03:47,960
A related way to
dry in a plot for

98
00:03:47,960 --> 00:03:51,035
correlations is a shaded
correlation matrix.

99
00:03:51,035 --> 00:03:53,375
In the ggcorrplot package,

100
00:03:53,375 --> 00:03:57,335
the ggcorrplot function
will generate this for us.

101
00:03:57,335 --> 00:04:00,695
Here I'm selecting a few
variables from the survey data,

102
00:04:00,695 --> 00:04:03,260
I calculate correlation
coefficients for

103
00:04:03,260 --> 00:04:04,610
them and I generate

104
00:04:04,610 --> 00:04:07,800
the correlation plot
using ggcorrplot.

105
00:04:08,930 --> 00:04:11,030
ggcorrplot has a number of

106
00:04:11,030 --> 00:04:13,580
different options within it
for modifying the colors and

107
00:04:13,580 --> 00:04:15,320
other visual features at the plot

108
00:04:15,320 --> 00:04:18,265
and you can access those if
you look at the help file,

109
00:04:18,265 --> 00:04:21,155
and you can also apply
a ggtheme if you like,

110
00:04:21,155 --> 00:04:24,630
if you recall doing this
from the previous course.

111
00:04:25,540 --> 00:04:28,940
Beyond summarizing
bivariate relationships,

112
00:04:28,940 --> 00:04:31,070
you can also modify
figures that you make with

113
00:04:31,070 --> 00:04:35,060
geom_point to compare values
across units of observation,

114
00:04:35,060 --> 00:04:36,835
kind of like a bar plot.

115
00:04:36,835 --> 00:04:38,830
In fact, many professional data

116
00:04:38,830 --> 00:04:40,670
visualizers prefer these kinds of

117
00:04:40,670 --> 00:04:44,815
plots to bar charts because
of their visual simplicity.

118
00:04:44,815 --> 00:04:47,180
One figure we're
talking about here is

119
00:04:47,180 --> 00:04:49,100
called a cleveland dot plot,

120
00:04:49,100 --> 00:04:50,960
and to give you an
example of this,

121
00:04:50,960 --> 00:04:53,570
I'll draw on the data
from law about lawmaking

122
00:04:53,570 --> 00:04:57,305
in the US Congress that we've
used in previous courses.

123
00:04:57,305 --> 00:05:00,320
Here, I'm selecting a
sample of members from

124
00:05:00,320 --> 00:05:02,930
the 114th congress and

125
00:05:02,930 --> 00:05:04,040
what I want to do is compare

126
00:05:04,040 --> 00:05:05,585
their legislative effectiveness,

127
00:05:05,585 --> 00:05:09,460
which is summarized by the
variable les in the data.

128
00:05:09,460 --> 00:05:12,155
Again, higher les values mean

129
00:05:12,155 --> 00:05:14,490
more legislative
productivity for the member,

130
00:05:14,490 --> 00:05:16,910
so we're basically going to
compare sort of how good of

131
00:05:16,910 --> 00:05:18,650
a law maker a set of members

132
00:05:18,650 --> 00:05:21,530
are by seeing how
productive they are.

133
00:05:22,040 --> 00:05:24,465
In my ggplot function,

134
00:05:24,465 --> 00:05:27,020
I set the data and I do
the aesthetic mapping,

135
00:05:27,020 --> 00:05:29,795
so to the x-axis is my
outcome of interests

136
00:05:29,795 --> 00:05:32,935
and my y-value is the
units of comparison.

137
00:05:32,935 --> 00:05:34,845
When I add geom_point to this,

138
00:05:34,845 --> 00:05:38,570
I get a single point analogous
to the top of a bar chart.

139
00:05:38,570 --> 00:05:40,700
These next lines, I'm doing

140
00:05:40,700 --> 00:05:42,710
modifications to
the theme function

141
00:05:42,710 --> 00:05:44,540
to drop some of the
white vertical lines

142
00:05:44,540 --> 00:05:46,960
and adding some dashed
horizontal lines,

143
00:05:46,960 --> 00:05:49,785
and I also changed the
point size, the labels,

144
00:05:49,785 --> 00:05:52,160
and I reorder the
units on the y-axis by

145
00:05:52,160 --> 00:05:55,855
the value of the outcome
variable in descending order.

146
00:05:55,855 --> 00:05:58,010
With those modifications, we get

147
00:05:58,010 --> 00:06:02,270
a nice refined minimal
plot for comparison.

148
00:06:02,270 --> 00:06:05,120
Finally, a
close-related variation

149
00:06:05,120 --> 00:06:07,825
of this dot plot is
called a lollipop plot,

150
00:06:07,825 --> 00:06:10,440
try saying that three times fast,

151
00:06:10,440 --> 00:06:13,250
and it's even more
similar to a bar plot.

152
00:06:13,250 --> 00:06:15,545
To make a lollipop figure,

153
00:06:15,545 --> 00:06:17,450
I flipped the y and x-axis in

154
00:06:17,450 --> 00:06:20,235
my aesthetic mapping
and I used geom_points,

155
00:06:20,235 --> 00:06:22,260
but rather than drop
the grid-lines,

156
00:06:22,260 --> 00:06:23,720
I use geom underscore

157
00:06:23,720 --> 00:06:26,000
segment to draw lines
that connect from

158
00:06:26,000 --> 00:06:27,980
the x-axis at the y value of

159
00:06:27,980 --> 00:06:30,140
zero so that the bottom of that,

160
00:06:30,140 --> 00:06:32,675
to the y value for the
variable of interest.

161
00:06:32,675 --> 00:06:36,425
So going up for each
category across.

162
00:06:36,425 --> 00:06:39,440
Again, this is just the
very refined simple way

163
00:06:39,440 --> 00:06:42,150
of making a bar plot essentially.