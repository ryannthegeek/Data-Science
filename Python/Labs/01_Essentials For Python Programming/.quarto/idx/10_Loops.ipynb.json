{"title":"Loops","markdown":{"yaml":{"title":"Loops"},"headingText":"While loop","containsRefs":false,"markdown":"\n\n\n\n\nA loop or iteration is one or more sequential statements executed repeatedly until a certain condition met.\n\n\nA while loop statement executes a target statement as long as a given condition is true.\n\n![While loop](while%20loop.png)\n\n\n\n### While Loop else statement\n\nWhen the else statement is used with a while loop, the else statement is executed when the condition becomes false.\n\n## For loop\n\nThe for loop has the ability to iterate over the items of any sequence,such as a list or a string. If a sequeence contains an expression list, it is evaluated first then, first item in sequence is assigned to iterating variable.\n\nNext, the statements block is executed Each item in the list is assigned to iterating variable statement(s) block is executed until the entire sequence is exhausted.\n\n![For loop](for%20loop.png)\n\n### For loop using `range()` function\n\n`range()` function generates list of numbers. It takes 0 as starting parameter but you can specify the starting parameter.\n\n\\fcolorbox{black}{cyan}{For example:} `range(2, 7)` returns a sequence of numbers starting from 2 and going to 7, for loop iterates through these numbers.\n\n### For loop else statement\n\nIf the else statement is used with a for loop, the else statement is executed when the loop has exhausted iterating the list.\n\n\n## Nested loops\n\nA nested loop is any type of loop inside of any other type of loop.\n\n## Loop control statements\n\nLoop control statements change execution from normal sequence. When execution leaves a scope, all automatic objects in that cope are destroyed.\n\nPython supports the following loop control statements:\n\n| **Control statment** | **Description** |\n| -- | --------- |\n| `break` | Terminate the loop statement and transfers execution to the statement immediately following the loop\n| `continue` | Causes the loop to skip the remainder of its body and immediately retest its condition prior to re-iterating\n| `pass` | The pass statement is used when a statement is required syntactically but you don’t want any command or code to execute\n\n: Loop control statements\n\n### Break statement\n\nThe break statement terminates the current loop and resumes execution at the next statement.\n\nIn case of nested loops, the break statement will stop the execution of the innermost loop and start executing the next line of code after the block.\n\n![Break statement flow chart](break%20statement.png)\n\n### Pass statement\n\nThe pass statement is used when a statement is required syntactically but you do not want any command or code to execute The pass statement is a null operation,nothing happens when it executes.\n","srcMarkdownNoYaml":"\n\n\n\n\nA loop or iteration is one or more sequential statements executed repeatedly until a certain condition met.\n\n## While loop\n\nA while loop statement executes a target statement as long as a given condition is true.\n\n![While loop](while%20loop.png)\n\n\n\n### While Loop else statement\n\nWhen the else statement is used with a while loop, the else statement is executed when the condition becomes false.\n\n## For loop\n\nThe for loop has the ability to iterate over the items of any sequence,such as a list or a string. If a sequeence contains an expression list, it is evaluated first then, first item in sequence is assigned to iterating variable.\n\nNext, the statements block is executed Each item in the list is assigned to iterating variable statement(s) block is executed until the entire sequence is exhausted.\n\n![For loop](for%20loop.png)\n\n### For loop using `range()` function\n\n`range()` function generates list of numbers. It takes 0 as starting parameter but you can specify the starting parameter.\n\n\\fcolorbox{black}{cyan}{For example:} `range(2, 7)` returns a sequence of numbers starting from 2 and going to 7, for loop iterates through these numbers.\n\n### For loop else statement\n\nIf the else statement is used with a for loop, the else statement is executed when the loop has exhausted iterating the list.\n\n\n## Nested loops\n\nA nested loop is any type of loop inside of any other type of loop.\n\n## Loop control statements\n\nLoop control statements change execution from normal sequence. When execution leaves a scope, all automatic objects in that cope are destroyed.\n\nPython supports the following loop control statements:\n\n| **Control statment** | **Description** |\n| -- | --------- |\n| `break` | Terminate the loop statement and transfers execution to the statement immediately following the loop\n| `continue` | Causes the loop to skip the remainder of its body and immediately retest its condition prior to re-iterating\n| `pass` | The pass statement is used when a statement is required syntactically but you don’t want any command or code to execute\n\n: Loop control statements\n\n### Break statement\n\nThe break statement terminates the current loop and resumes execution at the next statement.\n\nIn case of nested loops, the break statement will stop the execution of the innermost loop and start executing the next line of code after the block.\n\n![Break statement flow chart](break%20statement.png)\n\n### Pass statement\n\nThe pass statement is used when a statement is required syntactically but you do not want any command or code to execute The pass statement is a null operation,nothing happens when it executes.\n"},"formats":{"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"png","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":false,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":"H","fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","toc":true,"toc-depth":4,"number-sections":true,"listings":true,"include-in-header":["D:\\Chege Learners' Hub\\quarto learning\\listsetP.tex","D:\\Chege Learners' Hub\\quarto learning\\contactdets.tex"],"output-file":"Essentials For Python Programming"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"block-headings":true,"jupyter":"python3","documentclass":"report","classoption":["12pt","a4paper","oneside","openright"],"toc-title":"Contents","toccolor":"blue","number-depth":3,"lof":true,"lot":true,"urlcolor":"purple","colorlinks":true,"linkcolor":"blue","filecolor":"magenta","citecolor":"blue","link-citations":true,"title":"Loops"},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["pdf"]}