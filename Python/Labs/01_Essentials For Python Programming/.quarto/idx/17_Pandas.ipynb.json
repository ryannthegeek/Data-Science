{"title":"Pandas Library For Data Science","markdown":{"yaml":{"title":"Pandas Library For Data Science"},"headingText":"Loading csv file as a data frame","containsRefs":false,"markdown":"\n\n\n\n\nPandas is a Python library for data manipulation and analysis.  \nIt allows \\fcolorbox{black}{cyan}{Exploring}, \\fcolorbox{black}{cyan}{Cleaning} and \\fcolorbox{black}{cyan}{Processing} tabular data.\n\nIt provides two ways for storing data:\n\n\\begin{itemize}\n    \\item[\\ding{51}] Series, which is one dimensional data structure.\n    \\item[\\ding{51}] Data Frame, which is two dimensional data structure.\n\\end{itemize}\n\nCreating a data frame using lists:\n\n\n\nCreating a data frame using Dictionary\n\n\n**cel data**\n\n### Data and Data Description\n\n+-------------------+------------------------------------------------------------------------------------------------------+\n| **Variable name** | **Description**                                                                                      |\n+===================+======================================================================================================+\n| thomas_name       | Name of the member                                                                                   |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| congress          | number of the congress (there is a new congress every two years)                                     |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| year              | year of the start of the congress                                                                    |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| st_name           | State abbreviation for the member's district                                                         |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| cd                | congressional district number                                                                        |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| dem               | 0/1 indicator for whether the member is a democrat                                                   |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| elected           | year the member was elected                                                                          |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| female            | 0/1 indicator for whether the member is female                                                       |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| votepct           | the percent of the vote the MC won in the election for this congress                                 |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| dwnom1            | DW-Nominate score indicative member ideology. Higher is more conservative                            |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| deleg_size        | How many MCs are in the member's state delegation?                                                   |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| speaker           | Is the member the Speaker of the House? 0/1                                                          |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| subchr            | Is the member the chair of a congressional subcommittee?                                             |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| afam              | Is the member African American? 0/1                                                                  |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| latino            | Is the member latino?                                                                                |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| power             | Is the member on a \"powerful\" committee in Congress?                                                 |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| chair             | Is the member a chair of a full committee?                                                           |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| state_leg         | Was the member a state legislator prior to being elected to congress?                                |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| state_leg_prof    | How professionalized is the state legislature in the member's state? Higher is more professional     |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| majority          | Is the member in the majority in this congress? 0/1                                                  |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| maj_leader        | Is the member a majority leader in this congress? 0/1                                                |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| min_leader        | Is the member a minority leader in this congress? 0/1                                                |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| meddist           | How far away is the member from the chamber median dwnom1 score?                                     |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| meddist           | How far away is the member from the majority median dwnom1 score?                                    |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| all_bills         | How many bills did the member introduce in this congress?                                            |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| all_aic           | How many bills did the member introduce that get action in a committee in this congress?             |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| all_abc           | How many bills did the member introduce that get action beyond the committee state in this congress? |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| all_pass          | How many bills did the member introduce that passed out of the House in this congress?               |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| all_law           | How many bills did the member introduced that became law in this congress?                           |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| les               | Volden and Wiseman's legislative effective score (LES). Higher means the member is more effective.   |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| seniority         | How many term has the member been in congress, including the current term                            |\n+-------------------+------------------------------------------------------------------------------------------------------+\n\n: cel data variable names and there description {#tbl-cel data description}\n\nChanging the Index column\n\nIt is possible to make one the column of the data to be the index column\n\nUsing `inplace` function to change the original data structure\n\nStatistical Summary of the data frame\n\nSlicing rows using bracket operators\n\nIndexing Columns using bracket operators\n\nPassing a list of booleans to the `[]` operator\n\nFiltering rows\n\nFiltering rows using `&` and `|` operators\n\nNote: Each condition should be in parentheses\n\nFiltering data using `loc` function\n\n- `loc` is used to index/slice a group of rows and columns based on their labels. \n - The first argument is the row label and the second argument is the column label. \n - In the following example we index the first row and the third column.\n\n\nSlicing\n\n We can also slice rows and/or columns using the loc method. \n - Both the start and stop index of a slice with Ioc are inclusive. \n - In the following example, we slice the first 5 rows and the first 5 columns of the \n DataFrame. The result is a DataFrame.\n\n\nIndexing and Slicing \n We can index and slice simultaneously as well. \n - In the following example we index rows and slice columns. The opposite is also \n possible.\n\n\nFiltering data using `iloc()`\n\nIndexing \n - iloc is used to index/slice a group of rows and columns. \n - Iloc takes row and column positions as arguments and not their labels. \n The first argument is the row position and the second argument is the column position. \n - In the following example we index the forth row and the third column. The result is a \n Series.\n\n\nSlicing \n- We can also slice rows and/or columns using the iloc method. \n- We provide row and column positions for slicing using iloc. \n- The Start index Of a slice with iloc is inclusive. However, the end index is exclusive. \n- In the following example, we slice the first S rows and the first 3 columns of the \n DataFrame. The result is a DataFrame,\n\n\nIndexing and Slicing \n- We can index and slice simultaneously as well. \n - In the following example we index rows and slice columns. The opposite also \n possible.\n\n\nAdding and deleting rows and columns\n\nAdding Rows \n- We can add more rows to our DataFrame using the loc method. \n- If the row label does not exist, a new row with the specified label will be added at the end of the row.\n\n\nDeleting Rows \n- We can delete rows from the DataFrame using `drop()` function by specifying `axis=O` for  rows and `axis=1` for columns\n- Provide the labels Of the rows to be deleted as argument to the `drop()` function. \n- Don't forget to use i`npIace=True`, otherwise the original DataFrame will remain unchanged.\n\n\nAdding Columns \n- To add a column to the DataFrame, we use the same notation as adding a key, value pair to a dictionary. \n- Instead Of the key, we provide column name in the square brackets, and then provide a list of values for that column. \n- If no column With the given name exists, a new column With the specified name and values will be added to the DataFrame.\n\n\nDeleting Columns \n- We can also delete columns of the DataFrame using drop function by specifying `axis=1` for columns. \n- Provide the column names to be deleted as argument to the `drop()` function. \n- Don't forget to use inpIace=True, otherwise the original DataFrame will remain unchanged.\n\n\nSorting Values\n\n- We can sort the values of a DataFrame with respect to a column using the `sort_values()` function, which sorts the values in ascending order by default, if you want descending order, use `ascending=False`.\n- If the values of the column are alphabets, the are sorted alphabetically. \n- If the values of the column are numbers, they are sorted numerically.\n\n\nExporting and Saving Pandas DataFrame\n\n- To export a DataFrame as a csv file, use `to_csv()` function.\n- If you do not want to store index column in the csv file, you can set `index_label=False` in the `to_csv()` function.\n\n\nConcatanating DataFrames\n\n- We can concatanate two or more dataframes below to each other by using `axis=0`\n- We can concatanate two or more dataframes side-by-side to each other by using `axis=1`\n\nConcatanating side-by-side\n\n`groupby()` function\n\ngroupby() function is used to group DataFrame based on Series. \n- The DataFrame is splitted into groups. \n- An aggregate function is applied to each column of the splitted DataFrame. \n- Results are combined together. \n- Consider the following DataFrame.\n\n\n## Data Analysis in The Yelp Dataset\n\nInformation about local businesses in 13 cities in PA and NV \n \"yelp_data\" tab data columns: \n\n- name: Name of business \n- category _0: ISt user-assigned business category \n- category_l: 2nd user-assigned business category \n- take-out: Flag (True/FaIse) indicating if business provides take-out \n- review count: Number of reviews \n- stars: Overall star rating \n- city_id: Identifier referencing city of business (match to id on \"cities\" tab) \n- state_id: Identifier referencing state of business (match to id on \"states\" tab)\n\n\"cities\" tab data columns: \n- id: Unique identifier of city \n- city: City name\n\n\"states\" tab data columns: \n- id: Unique identifier of state \n- state: State name\n\n### Loading Data\n\n### Inspecting Data\n\n#### Joining data\n\n### Quering Data\n\nWe want to see name, city and state of first 5 businesses\n\n#### Quering Data - Slicing Rows\n\nFormat: `[start(inclusive), end(exclusive)]`\n\n### Querying Data - Conditions Using Boolean Indexing\n\nSelect the businessess in Pittsburgh\n\nSelect the Bars\n\nSelect the bars in Carnegie\n\nSelect the bars and restaurants in Carnegie\n\nHow many total Dive bars are there in Las Vegas\n\nRecommend a random dive bar with at least a 4 star rating\n\n- Look at the total set of dive bars above and query for those that have a star rating of at least 4.0\n- Import the random module: import random\n- Get a random number using the randint method\n- Get a random dive bar from the set above using the random number\n\nCalculate the total number of reviews for nail salons in Henderson\n\nCalculate the average star rating for auto repair shops in Pittsburgh\n\nWhat cities are in the yelp dataset\n\n\nHow many businesses are in each city\n\nHow many unique user assigned business categories are ther in category_0\n\n#### Updating and Creating Data\n\nAdd a new “categories” column that combines “category_0” and “category_1” as a commaseparated list\n\nNow we can look up businesses based on the single \"category\" column\n\n- Add a new “rating” column that converts “stars” to a comparable value in the 10-point system\n\n- Now, update the new “rating” column so that it displays the rating as ”x out of 10” First, create a helper function that will take a rating value as an argument and concatenate a string to it\n\nuse the `apply()` method to run the helper function for the rating in each row\n\n#### Querying Data – agg()\n\nLet’s find out the sum, mean, and standard deviation for the star ratings of each city\n\n## Pivot Tables\n\nA pivot table is a useful data summarization tool that creates a new table from the contents in the DataFrame.\n\n\\ding{88} Note: By default, the pivot table calculates average (mean) for each column\n\nIt is possible to use more than one index\n\n- Create a pivot table that displays the average (mean) review count and star rating for bars and restaurants in each city\n\n#### Pivot Tables – `aggfunc()`\n\n- To display summary statistics other than the average (mean)\n    + Use the `aggfunc` parameter to specify the aggregation function(s)\n    + Use the \\nl{values} parameter to specify the column(s) for the aggfunc\n\nIn our dataset, how many (sum) reviews does each city have?\n\nIt’s possible to further segment our results using the “columns” parameter\n\n- We can also pass as an argument to aggfunc(), a dict object containing different aggregate functions to perform on different values\n- If we want to see the total number of review counts, their mean, standard deviation and skewness and average ratings\n","srcMarkdownNoYaml":"\n\n\n\n\nPandas is a Python library for data manipulation and analysis.  \nIt allows \\fcolorbox{black}{cyan}{Exploring}, \\fcolorbox{black}{cyan}{Cleaning} and \\fcolorbox{black}{cyan}{Processing} tabular data.\n\nIt provides two ways for storing data:\n\n\\begin{itemize}\n    \\item[\\ding{51}] Series, which is one dimensional data structure.\n    \\item[\\ding{51}] Data Frame, which is two dimensional data structure.\n\\end{itemize}\n\nCreating a data frame using lists:\n\n\n\nCreating a data frame using Dictionary\n\n## Loading csv file as a data frame\n\n**cel data**\n\n### Data and Data Description\n\n+-------------------+------------------------------------------------------------------------------------------------------+\n| **Variable name** | **Description**                                                                                      |\n+===================+======================================================================================================+\n| thomas_name       | Name of the member                                                                                   |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| congress          | number of the congress (there is a new congress every two years)                                     |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| year              | year of the start of the congress                                                                    |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| st_name           | State abbreviation for the member's district                                                         |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| cd                | congressional district number                                                                        |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| dem               | 0/1 indicator for whether the member is a democrat                                                   |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| elected           | year the member was elected                                                                          |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| female            | 0/1 indicator for whether the member is female                                                       |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| votepct           | the percent of the vote the MC won in the election for this congress                                 |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| dwnom1            | DW-Nominate score indicative member ideology. Higher is more conservative                            |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| deleg_size        | How many MCs are in the member's state delegation?                                                   |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| speaker           | Is the member the Speaker of the House? 0/1                                                          |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| subchr            | Is the member the chair of a congressional subcommittee?                                             |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| afam              | Is the member African American? 0/1                                                                  |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| latino            | Is the member latino?                                                                                |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| power             | Is the member on a \"powerful\" committee in Congress?                                                 |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| chair             | Is the member a chair of a full committee?                                                           |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| state_leg         | Was the member a state legislator prior to being elected to congress?                                |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| state_leg_prof    | How professionalized is the state legislature in the member's state? Higher is more professional     |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| majority          | Is the member in the majority in this congress? 0/1                                                  |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| maj_leader        | Is the member a majority leader in this congress? 0/1                                                |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| min_leader        | Is the member a minority leader in this congress? 0/1                                                |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| meddist           | How far away is the member from the chamber median dwnom1 score?                                     |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| meddist           | How far away is the member from the majority median dwnom1 score?                                    |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| all_bills         | How many bills did the member introduce in this congress?                                            |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| all_aic           | How many bills did the member introduce that get action in a committee in this congress?             |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| all_abc           | How many bills did the member introduce that get action beyond the committee state in this congress? |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| all_pass          | How many bills did the member introduce that passed out of the House in this congress?               |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| all_law           | How many bills did the member introduced that became law in this congress?                           |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| les               | Volden and Wiseman's legislative effective score (LES). Higher means the member is more effective.   |\n+-------------------+------------------------------------------------------------------------------------------------------+\n| seniority         | How many term has the member been in congress, including the current term                            |\n+-------------------+------------------------------------------------------------------------------------------------------+\n\n: cel data variable names and there description {#tbl-cel data description}\n\nChanging the Index column\n\nIt is possible to make one the column of the data to be the index column\n\nUsing `inplace` function to change the original data structure\n\nStatistical Summary of the data frame\n\nSlicing rows using bracket operators\n\nIndexing Columns using bracket operators\n\nPassing a list of booleans to the `[]` operator\n\nFiltering rows\n\nFiltering rows using `&` and `|` operators\n\nNote: Each condition should be in parentheses\n\nFiltering data using `loc` function\n\n- `loc` is used to index/slice a group of rows and columns based on their labels. \n - The first argument is the row label and the second argument is the column label. \n - In the following example we index the first row and the third column.\n\n\nSlicing\n\n We can also slice rows and/or columns using the loc method. \n - Both the start and stop index of a slice with Ioc are inclusive. \n - In the following example, we slice the first 5 rows and the first 5 columns of the \n DataFrame. The result is a DataFrame.\n\n\nIndexing and Slicing \n We can index and slice simultaneously as well. \n - In the following example we index rows and slice columns. The opposite is also \n possible.\n\n\nFiltering data using `iloc()`\n\nIndexing \n - iloc is used to index/slice a group of rows and columns. \n - Iloc takes row and column positions as arguments and not their labels. \n The first argument is the row position and the second argument is the column position. \n - In the following example we index the forth row and the third column. The result is a \n Series.\n\n\nSlicing \n- We can also slice rows and/or columns using the iloc method. \n- We provide row and column positions for slicing using iloc. \n- The Start index Of a slice with iloc is inclusive. However, the end index is exclusive. \n- In the following example, we slice the first S rows and the first 3 columns of the \n DataFrame. The result is a DataFrame,\n\n\nIndexing and Slicing \n- We can index and slice simultaneously as well. \n - In the following example we index rows and slice columns. The opposite also \n possible.\n\n\nAdding and deleting rows and columns\n\nAdding Rows \n- We can add more rows to our DataFrame using the loc method. \n- If the row label does not exist, a new row with the specified label will be added at the end of the row.\n\n\nDeleting Rows \n- We can delete rows from the DataFrame using `drop()` function by specifying `axis=O` for  rows and `axis=1` for columns\n- Provide the labels Of the rows to be deleted as argument to the `drop()` function. \n- Don't forget to use i`npIace=True`, otherwise the original DataFrame will remain unchanged.\n\n\nAdding Columns \n- To add a column to the DataFrame, we use the same notation as adding a key, value pair to a dictionary. \n- Instead Of the key, we provide column name in the square brackets, and then provide a list of values for that column. \n- If no column With the given name exists, a new column With the specified name and values will be added to the DataFrame.\n\n\nDeleting Columns \n- We can also delete columns of the DataFrame using drop function by specifying `axis=1` for columns. \n- Provide the column names to be deleted as argument to the `drop()` function. \n- Don't forget to use inpIace=True, otherwise the original DataFrame will remain unchanged.\n\n\nSorting Values\n\n- We can sort the values of a DataFrame with respect to a column using the `sort_values()` function, which sorts the values in ascending order by default, if you want descending order, use `ascending=False`.\n- If the values of the column are alphabets, the are sorted alphabetically. \n- If the values of the column are numbers, they are sorted numerically.\n\n\nExporting and Saving Pandas DataFrame\n\n- To export a DataFrame as a csv file, use `to_csv()` function.\n- If you do not want to store index column in the csv file, you can set `index_label=False` in the `to_csv()` function.\n\n\nConcatanating DataFrames\n\n- We can concatanate two or more dataframes below to each other by using `axis=0`\n- We can concatanate two or more dataframes side-by-side to each other by using `axis=1`\n\nConcatanating side-by-side\n\n`groupby()` function\n\ngroupby() function is used to group DataFrame based on Series. \n- The DataFrame is splitted into groups. \n- An aggregate function is applied to each column of the splitted DataFrame. \n- Results are combined together. \n- Consider the following DataFrame.\n\n\n## Data Analysis in The Yelp Dataset\n\nInformation about local businesses in 13 cities in PA and NV \n \"yelp_data\" tab data columns: \n\n- name: Name of business \n- category _0: ISt user-assigned business category \n- category_l: 2nd user-assigned business category \n- take-out: Flag (True/FaIse) indicating if business provides take-out \n- review count: Number of reviews \n- stars: Overall star rating \n- city_id: Identifier referencing city of business (match to id on \"cities\" tab) \n- state_id: Identifier referencing state of business (match to id on \"states\" tab)\n\n\"cities\" tab data columns: \n- id: Unique identifier of city \n- city: City name\n\n\"states\" tab data columns: \n- id: Unique identifier of state \n- state: State name\n\n### Loading Data\n\n### Inspecting Data\n\n#### Joining data\n\n### Quering Data\n\nWe want to see name, city and state of first 5 businesses\n\n#### Quering Data - Slicing Rows\n\nFormat: `[start(inclusive), end(exclusive)]`\n\n### Querying Data - Conditions Using Boolean Indexing\n\nSelect the businessess in Pittsburgh\n\nSelect the Bars\n\nSelect the bars in Carnegie\n\nSelect the bars and restaurants in Carnegie\n\nHow many total Dive bars are there in Las Vegas\n\nRecommend a random dive bar with at least a 4 star rating\n\n- Look at the total set of dive bars above and query for those that have a star rating of at least 4.0\n- Import the random module: import random\n- Get a random number using the randint method\n- Get a random dive bar from the set above using the random number\n\nCalculate the total number of reviews for nail salons in Henderson\n\nCalculate the average star rating for auto repair shops in Pittsburgh\n\nWhat cities are in the yelp dataset\n\n\nHow many businesses are in each city\n\nHow many unique user assigned business categories are ther in category_0\n\n#### Updating and Creating Data\n\nAdd a new “categories” column that combines “category_0” and “category_1” as a commaseparated list\n\nNow we can look up businesses based on the single \"category\" column\n\n- Add a new “rating” column that converts “stars” to a comparable value in the 10-point system\n\n- Now, update the new “rating” column so that it displays the rating as ”x out of 10” First, create a helper function that will take a rating value as an argument and concatenate a string to it\n\nuse the `apply()` method to run the helper function for the rating in each row\n\n#### Querying Data – agg()\n\nLet’s find out the sum, mean, and standard deviation for the star ratings of each city\n\n## Pivot Tables\n\nA pivot table is a useful data summarization tool that creates a new table from the contents in the DataFrame.\n\n\\ding{88} Note: By default, the pivot table calculates average (mean) for each column\n\nIt is possible to use more than one index\n\n- Create a pivot table that displays the average (mean) review count and star rating for bars and restaurants in each city\n\n#### Pivot Tables – `aggfunc()`\n\n- To display summary statistics other than the average (mean)\n    + Use the `aggfunc` parameter to specify the aggregation function(s)\n    + Use the \\nl{values} parameter to specify the column(s) for the aggfunc\n\nIn our dataset, how many (sum) reviews does each city have?\n\nIt’s possible to further segment our results using the “columns” parameter\n\n- We can also pass as an argument to aggfunc(), a dict object containing different aggregate functions to perform on different values\n- If we want to see the total number of review counts, their mean, standard deviation and skewness and average ratings\n"},"formats":{"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"png","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":false,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":"H","fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","toc":true,"toc-depth":4,"number-sections":true,"listings":true,"include-in-header":["D:\\Chege Learners' Hub\\quarto learning\\listsetP.tex","D:\\Chege Learners' Hub\\quarto learning\\contactdets.tex"],"output-file":"Essentials For Python Programming"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"block-headings":true,"jupyter":"python3","documentclass":"report","classoption":["12pt","a4paper","oneside","openright"],"toc-title":"Contents","toccolor":"blue","number-depth":3,"lof":true,"lot":true,"urlcolor":"purple","colorlinks":true,"linkcolor":"blue","filecolor":"magenta","citecolor":"blue","link-citations":true,"title":"Pandas Library For Data Science"},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["pdf"]}